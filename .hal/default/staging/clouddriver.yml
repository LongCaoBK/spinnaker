## WARNING
## This file was autogenerated, and _will_ be overwritten by Halyard.
## Any edits you make here _will_ be lost.

spectator:
  applicationName: ${spring.application.name}
  webEndpoint:
    enabled: false

spinnaker:
  extensibility:
    plugins: {}
    repositories: {}
    plugins-root-path: /opt/clouddriver/plugins
    strict-plugin-loading: false

appengine:
  enabled: false
  accounts: []
aws:
  enabled: false
  accounts: []
  bakeryDefaults:
    baseImages: []
  defaultKeyPairTemplate: '{{name}}-keypair'
  defaultRegions:
  - name: us-west-2
  defaults:
    iamRole: BaseIAMRole
ecs:
  enabled: false
  accounts: []
azure:
  enabled: false
  accounts: []
  bakeryDefaults:
    templateFile: azure-linux.json
    baseImages: []
dcos:
  enabled: false
  accounts: []
  clusters: []
dockerRegistry:
  enabled: true
  accounts: []
google:
  enabled: false
  accounts: []
  bakeryDefaults:
    templateFile: gce.json
    baseImages: []
    zone: us-central1-f
    network: default
    useInternalIp: false
huaweicloud:
  enabled: false
  accounts: []
  bakeryDefaults:
    baseImages: []
kubernetes:
  enabled: true
  accounts:
  - name: staging-demo
    requiredGroupMembership: []
    permissions: {}
    dockerRegistries: []
    providerVersion: V2
    context: minikube
    configureImagePullSecrets: true
    cacheThreads: 1
    namespaces: []
    omitNamespaces: []
    kinds: []
    omitKinds: []
    customResources: []
    cachingPolicies: []
    kubeconfigFile: /home/spinnaker/.hal/default/staging/dependencies/2054179555-config
    rawResourcesEndpointConfig:
      kindExpressions: []
      omitKindExpressions: []
    oAuthScopes: []
    onlySpinnakerManaged: false
  - name: prod-demo
    requiredGroupMembership: []
    permissions: {}
    dockerRegistries: []
    providerVersion: V2
    context: minikube
    configureImagePullSecrets: true
    cacheThreads: 1
    namespaces: []
    omitNamespaces: []
    kinds: []
    omitKinds: []
    customResources: []
    cachingPolicies: []
    kubeconfigFile: /home/spinnaker/.hal/default/staging/dependencies/2054179555-config
    rawResourcesEndpointConfig:
      kindExpressions: []
      omitKindExpressions: []
    oAuthScopes: []
    onlySpinnakerManaged: false
  - name: dev-demo
    requiredGroupMembership: []
    permissions: {}
    dockerRegistries: []
    providerVersion: V2
    context: minikube
    configureImagePullSecrets: true
    cacheThreads: 1
    namespaces: []
    omitNamespaces: []
    kinds: []
    omitKinds: []
    customResources: []
    cachingPolicies: []
    kubeconfigFile: /home/spinnaker/.hal/default/staging/dependencies/2054179555-config
    rawResourcesEndpointConfig:
      kindExpressions: []
      omitKindExpressions: []
    oAuthScopes: []
    onlySpinnakerManaged: false
  - name: my-account
    requiredGroupMembership: []
    permissions: {}
    dockerRegistries: []
    providerVersion: V2
    context: minikube
    configureImagePullSecrets: true
    cacheThreads: 1
    namespaces: []
    omitNamespaces: []
    kinds: []
    omitKinds: []
    customResources: []
    cachingPolicies: []
    kubeconfigFile: /home/spinnaker/.hal/default/staging/dependencies/2054179555-config
    rawResourcesEndpointConfig:
      kindExpressions: []
      omitKindExpressions: []
    oAuthScopes: []
    onlySpinnakerManaged: false
  primaryAccount: staging-demo
tencentcloud:
  enabled: false
  accounts: []
  bakeryDefaults:
    baseImages: []
oracle:
  enabled: false
  accounts: []
  bakeryDefaults:
    templateFile: oci.json
    baseImages: []
cloudfoundry:
  enabled: false
  accounts: []

artifacts:
  bitbucket:
    enabled: false
    accounts: []
  gcs:
    enabled: false
    accounts: []
  oracle:
    enabled: false
    accounts: []
  github:
    enabled: false
    accounts: []
  gitlab:
    enabled: false
    accounts: []
  gitrepo:
    enabled: false
    accounts: []
  http:
    enabled: false
    accounts: []
  helm:
    enabled: false
    accounts: []
  s3:
    enabled: false
    accounts: []
  maven:
    enabled: false
    accounts: []
  templates: []

# halconfig

server:
  port: ${services.clouddriver.port:7002}
  address: ${services.clouddriver.host:localhost}
